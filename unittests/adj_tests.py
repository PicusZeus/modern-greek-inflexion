from unittest import TestCase, main

from modern_greek_inflexion.adjective import adjective


class AdjectiveTests(TestCase):

    def test_adj_oraios(self):
        self.assertEqual(
            adjective.create_all('ωραίος'),
            {'adj': [{'sg': {'masc': {'nom': 'ωραίος', 'gen': 'ωραίου', 'acc': 'ωραίο', 'voc': 'ωραίε'},
                             'fem': {'nom': 'ωραία', 'gen': 'ωραίας', 'acc': 'ωραία', 'voc': 'ωραία'},
                             'neut': {'nom': 'ωραίο', 'gen': 'ωραίου', 'acc': 'ωραίο', 'voc': 'ωραίο'}},
                      'pl': {'masc': {'nom': 'ωραίοι', 'gen': 'ωραίων', 'acc': 'ωραίους', 'voc': 'ωραίοι'},
                             'fem': {'nom': 'ωραίες', 'gen': 'ωραίων', 'acc': 'ωραίες', 'voc': 'ωραίες'},
                             'neut': {'nom': 'ωραία', 'gen': 'ωραίων', 'acc': 'ωραία', 'voc': 'ωραία'}}}],
             'comp': [{
                 'sg': {
                     'masc': {
                         'nom': 'ωραιότερος',
                         'gen': 'ωραιότερου',
                         'acc': 'ωραιότερο',
                         'voc': 'ωραιότερε'},
                     'fem': {
                         'nom': 'ωραιότερη',
                         'gen': 'ωραιότερης',
                         'acc': 'ωραιότερη',
                         'voc': 'ωραιότερη'},
                     'neut': {
                         'nom': 'ωραιότερο',
                         'gen': 'ωραιότερου',
                         'acc': 'ωραιότερο',
                         'voc': 'ωραιότερο'}},
                 'pl': {
                     'masc': {
                         'nom': 'ωραιότεροι',
                         'gen': 'ωραιότερων',
                         'acc': 'ωραιότερους',
                         'voc': 'ωραιότεροι'},
                     'fem': {
                         'nom': 'ωραιότερες',
                         'gen': 'ωραιότερων',
                         'acc': 'ωραιότερες',
                         'voc': 'ωραιότερες'},
                     'neut': {
                         'nom': 'ωραιότερα',
                         'gen': 'ωραιότερων',
                         'acc': 'ωραιότερα',
                         'voc': 'ωραιότερα'}}}],
             'superl': [{'sg': {
                 'masc': {'nom': 'ωραιότατος', 'gen': 'ωραιότατου', 'acc': 'ωραιότατο', 'voc': 'ωραιότατε'},
                 'fem': {'nom': 'ωραιότατη', 'gen': 'ωραιότατης', 'acc': 'ωραιότατη', 'voc': 'ωραιότατη'},
                 'neut': {'nom': 'ωραιότατο', 'gen': 'ωραιότατου', 'acc': 'ωραιότατο', 'voc': 'ωραιότατο'}}, 'pl': {
                 'masc': {'nom': 'ωραιότατοι', 'gen': 'ωραιότατων', 'acc': 'ωραιότατους', 'voc': 'ωραιότατοι'},
                 'fem': {'nom': 'ωραιότατες', 'gen': 'ωραιότατων', 'acc': 'ωραιότατες', 'voc': 'ωραιότατες'},
                 'neut': {'nom': 'ωραιότατα', 'gen': 'ωραιότατων', 'acc': 'ωραιότατα', 'voc': 'ωραιότατα'}}}],
             'adv': ['ωραία'], 'comp_adv': ['ωραιότερα'], 'superl_adv': ['ωραιότατα']}

        )

    def test_adj_kalos(self):
        self.assertEqual(
            adjective.create_all('καλός'),
            {'adj': [{'sg': {'masc': {'nom': 'καλός', 'gen': 'καλού', 'acc': 'καλό', 'voc': 'καλέ'},
                             'fem': {'nom': 'καλή', 'gen': 'καλής', 'acc': 'καλή', 'voc': 'καλή'},
                             'neut': {'nom': 'καλό', 'gen': 'καλού', 'acc': 'καλό', 'voc': 'καλό'}},
                      'pl': {'masc': {'nom': 'καλοί', 'gen': 'καλών', 'acc': 'καλούς', 'voc': 'καλοί'},
                             'fem': {'nom': 'καλές', 'gen': 'καλών', 'acc': 'καλές', 'voc': 'καλές'},
                             'neut': {'nom': 'καλά', 'gen': 'καλών', 'acc': 'καλά', 'voc': 'καλά'}}}], 'comp': [{'sg': {
                'masc': {'nom': 'καλύτερος', 'gen': 'καλύτερου', 'acc': 'καλύτερο', 'voc': 'καλύτερε'},
                'fem': {'nom': 'καλύτερη', 'gen': 'καλύτερης', 'acc': 'καλύτερη', 'voc': 'καλύτερη'},
                'neut': {'nom': 'καλύτερο', 'gen': 'καλύτερου', 'acc': 'καλύτερο', 'voc': 'καλύτερο'}}, 'pl': {
                'masc': {'nom': 'καλύτεροι', 'gen': 'καλύτερων', 'acc': 'καλύτερους', 'voc': 'καλύτεροι'},
                'fem': {'nom': 'καλύτερες', 'gen': 'καλύτερων', 'acc': 'καλύτερες', 'voc': 'καλύτερες'},
                'neut': {'nom': 'καλύτερα', 'gen': 'καλύτερων', 'acc': 'καλύτερα', 'voc': 'καλύτερα'}}}], 'superl': [{
                'sg': {
                    'masc': {
                        'nom': 'άριστος',
                        'gen': 'άριστου',
                        'acc': 'άριστο',
                        'voc': 'άριστε'},
                    'fem': {
                        'nom': 'άριστη',
                        'gen': 'άριστης',
                        'acc': 'άριστη',
                        'voc': 'άριστη'},
                    'neut': {
                        'nom': 'άριστο',
                        'gen': 'άριστου',
                        'acc': 'άριστο',
                        'voc': 'άριστο'}},
                'pl': {
                    'masc': {
                        'nom': 'άριστοι',
                        'gen': 'άριστων',
                        'acc': 'άριστους',
                        'voc': 'άριστοι'},
                    'fem': {
                        'nom': 'άριστες',
                        'gen': 'άριστων',
                        'acc': 'άριστες',
                        'voc': 'άριστες'},
                    'neut': {
                        'nom': 'άριστα',
                        'gen': 'άριστων',
                        'acc': 'άριστα',
                        'voc': 'άριστα'}}}],
             'adv': ['καλά', 'καλώς'], 'comp_adv': ['καλύτερα', 'κάλλιον', 'κάλλιο'], 'superl_adv': ['άριστα']}

        )
    def test_adj_portokalis(self):
        self.assertEqual(
            adjective.create_all('πορτοκαλής'),
            {'adj': [{'sg': {'masc': {'nom': 'πορτοκαλής', 'gen': 'πορτοκαλή', 'acc': 'πορτοκαλή', 'voc': 'πορτοκαλή'},
                             'fem': {'nom': 'πορτοκαλιά', 'gen': 'πορτοκαλιάς', 'acc': 'πορτοκαλιά',
                                     'voc': 'πορτοκαλιά'},
                             'neut': {'nom': 'πορτοκαλί', 'gen': 'πορτοκαλιού', 'acc': 'πορτοκαλί',
                                      'voc': 'πορτοκαλί'}}, 'pl': {
                'masc': {'nom': 'πορτοκαλιοί', 'gen': 'πορτοκαλιών', 'acc': 'πορτοκαλιούς', 'voc': 'πορτοκαλιοί'},
                'fem': {'nom': 'πορτοκαλιές', 'gen': 'πορτοκαλιών', 'acc': 'πορτοκαλιές', 'voc': 'πορτοκαλιές'},
                'neut': {'nom': 'πορτοκαλιά', 'gen': 'πορτοκαλιών', 'acc': 'πορτοκαλιά', 'voc': 'πορτοκαλιά'}}}],
             'comp': [], 'superl': [], 'adv': ['πορτοκαλιά'], 'comp_adv': [], 'superl_adv': []}

        )

    def test_adj_roz(self):
        self.assertEqual(
            adjective.create_all('ροζ'),
            {'adj': [{'sg': {'masc': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'},
                             'fem': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'},
                             'neut': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'}},
                      'pl': {'masc': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'},
                             'fem': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'},
                             'neut': {'nom': 'ροζ', 'gen': 'ροζ', 'acc': 'ροζ', 'voc': 'ροζ'}}}], 'comp': [],
             'superl': [], 'adv': ['ροζ'], 'comp_adv': [], 'superl_adv': []}

        )

    def test_adj_safis(self):
        self.assertEqual(
            adjective.create_all('σαφής'),
            {'adj': [{'sg': {'masc': {'nom': 'σαφής', 'gen': 'σαφούς', 'acc': 'σαφή', 'voc': 'σαφή'},
                             'fem': {'nom': 'σαφής', 'gen': 'σαφούς', 'acc': 'σαφή', 'voc': 'σαφής'},
                             'neut': {'nom': 'σαφές', 'gen': 'σαφούς', 'acc': 'σαφές', 'voc': 'σαφές'}},
                      'pl': {'masc': {'nom': 'σαφείς', 'gen': 'σαφών', 'acc': 'σαφείς', 'voc': 'σαφείς'},
                             'fem': {'nom': 'σαφείς', 'gen': 'σαφών', 'acc': 'σαφείς', 'voc': 'σαφείς'},
                             'neut': {'nom': 'σαφή', 'gen': 'σαφών', 'acc': 'σαφή', 'voc': 'σαφή'}}}], 'comp': [{'sg': {
                'masc': {'nom': 'σαφέστερος', 'gen': 'σαφέστερου', 'acc': 'σαφέστερο', 'voc': 'σαφέστερε'},
                'fem': {'nom': 'σαφέστερη', 'gen': 'σαφέστερης', 'acc': 'σαφέστερη', 'voc': 'σαφέστερη'},
                'neut': {'nom': 'σαφέστερο', 'gen': 'σαφέστερου', 'acc': 'σαφέστερο', 'voc': 'σαφέστερο'}}, 'pl': {
                'masc': {'nom': 'σαφέστεροι', 'gen': 'σαφέστερων', 'acc': 'σαφέστερους', 'voc': 'σαφέστεροι'},
                'fem': {'nom': 'σαφέστερες', 'gen': 'σαφέστερων', 'acc': 'σαφέστερες', 'voc': 'σαφέστερες'},
                'neut': {'nom': 'σαφέστερα', 'gen': 'σαφέστερων', 'acc': 'σαφέστερα', 'voc': 'σαφέστερα'}}}],
             'superl': [{'sg': {
                 'masc': {'nom': 'σαφέστατος', 'gen': 'σαφέστατου', 'acc': 'σαφέστατο', 'voc': 'σαφέστατε'},
                 'fem': {'nom': 'σαφέστατη', 'gen': 'σαφέστατης', 'acc': 'σαφέστατη', 'voc': 'σαφέστατη'},
                 'neut': {'nom': 'σαφέστατο', 'gen': 'σαφέστατου', 'acc': 'σαφέστατο', 'voc': 'σαφέστατο'}}, 'pl': {
                 'masc': {'nom': 'σαφέστατοι', 'gen': 'σαφέστατων', 'acc': 'σαφέστατους', 'voc': 'σαφέστατοι'},
                 'fem': {'nom': 'σαφέστατες', 'gen': 'σαφέστατων', 'acc': 'σαφέστατες', 'voc': 'σαφέστατες'},
                 'neut': {'nom': 'σαφέστατα', 'gen': 'σαφέστατων', 'acc': 'σαφέστατα', 'voc': 'σαφέστατα'}}}],
             'adv': ['σαφώς'], 'comp_adv': ['σαφέστερα'], 'superl_adv': ['σαφέστατα']}

        )

    def test_adj_tempelis(self):
        self.assertEqual(
            adjective.create_all('τεμπέλης'),
            {'adj': [{'sg': {'masc': {'nom': 'τεμπέλης', 'gen': 'τεμπέλη', 'acc': 'τεμπέλη', 'voc': 'τεμπέλη'},
                             'fem': {'nom': 'τεμπέλα', 'gen': 'τεμπέλας', 'acc': 'τεμπέλα', 'voc': 'τεμπέλα'},
                             'neut': {'nom': 'τεμπέλικο', 'gen': 'τεμπέλικου', 'acc': 'τεμπέλικο', 'voc': 'τεμπέλικο'}},
                      'pl': {
                          'masc': {'nom': 'τεμπέληδες', 'gen': 'τεμπέληδων', 'acc': 'τεμπέληδες', 'voc': 'τεμπέλδες'},
                          'fem': {'nom': 'τεμπέλες', 'gen': 'τεμπέων', 'acc': 'τεμπέλες', 'voc': 'τεμπέλες'},
                          'neut': {'nom': 'τεμπέλικα', 'gen': 'τεμπέλικων', 'acc': 'τεμπέλικα', 'voc': 'τεμπέλικα'}}}],
             'comp': [], 'superl': [], 'adv': ['τεμπέλικα'], 'comp_adv': [], 'superl_adv': []}

        )

    def test_adj_baris(self):
        self.assertEqual(
            adjective.create_all('βαρύς'),
            {'adj': [
                {'sg': {'masc': {'nom': 'βαρύς', 'gen': 'βαρύ', 'acc': 'βαρύ', 'voc': 'βαρύ'},
                             'fem': {'nom': 'βαρεία', 'gen': 'βαρείας', 'acc': 'βαρεία', 'voc': 'βαρεία'},
                             'neut': {'nom': 'βαρύ', 'gen': 'βαρύ', 'acc': 'βαρύ', 'voc': 'βαρύ'}},
                      'pl': {'masc': {'nom': 'βαρείς', 'gen': 'βαρέων', 'acc': 'βαρείς', 'voc': 'βαρείς'},
                             'fem': {'nom': 'βαρείες', 'gen': 'βαρειών', 'acc': 'βαρείες', 'voc': 'βαρείες'},
                             'neut': {'nom': 'βαρέα', 'gen': 'βαρέων', 'acc': 'βαρέα', 'voc': 'βαρέα'}}},

                     {'sg': {'masc': {'gen': 'βαρέος'}, 'neut': {'gen': 'βαρέος'}}}], 'comp': [{'sg': {
                'masc': {'nom': 'βαρύτερος', 'gen': 'βαρύτερου', 'acc': 'βαρύτερο', 'voc': 'βαρύτερε'},
                'fem': {'nom': 'βαρύτερη', 'gen': 'βαρύτερης', 'acc': 'βαρύτερη', 'voc': 'βαρύτερη'},
                'neut': {'nom': 'βαρύτερο', 'gen': 'βαρύτερου', 'acc': 'βαρύτερο', 'voc': 'βαρύτερο'}}, 'pl': {
                'masc': {'nom': 'βαρύτεροι', 'gen': 'βαρύτερων', 'acc': 'βαρύτερους', 'voc': 'βαρύτεροι'},
                'fem': {'nom': 'βαρύτερες', 'gen': 'βαρύτερων', 'acc': 'βαρύτερες', 'voc': 'βαρύτερες'},
                'neut': {'nom': 'βαρύτερα', 'gen': 'βαρύτερων', 'acc': 'βαρύτερα', 'voc': 'βαρύτερα'}}}],
             'superl': [{
                 'sg': {
                     'masc': {
                         'nom': 'βαρύτατος',
                         'gen': 'βαρύτατου',
                         'acc': 'βαρύτατο',
                         'voc': 'βαρύτατε'},
                     'fem': {
                         'nom': 'βαρύτατη',
                         'gen': 'βαρύτατης',
                         'acc': 'βαρύτατη',
                         'voc': 'βαρύτατη'},
                     'neut': {
                         'nom': 'βαρύτατο',
                         'gen': 'βαρύτατου',
                         'acc': 'βαρύτατο',
                         'voc': 'βαρύτατο'}},
                 'pl': {
                     'masc': {
                         'nom': 'βαρύτατοι',
                         'gen': 'βαρύτατων',
                         'acc': 'βαρύτατους',
                         'voc': 'βαρύτατοι'},
                     'fem': {
                         'nom': 'βαρύτατες',
                         'gen': 'βαρύτατων',
                         'acc': 'βαρύτατες',
                         'voc': 'βαρύτατες'},
                     'neut': {
                         'nom': 'βαρύτατα',
                         'gen': 'βαρύτατων',
                         'acc': 'βαρύτατα',
                         'voc': 'βαρύτατα'}}}],
             'adv': ['βαρέως'], 'comp_adv': ['βαρύτερα'], 'superl_adv': ['βαρύτατα']}

        )

    def test_adj_kakos(self):
        self.assertEqual(
            adjective.create_all('κακός'),
            {'adj': [{'sg': {'masc': {'nom': 'κακός', 'gen': 'κακού', 'acc': 'κακό', 'voc': 'κακέ'},
                             'fem': {'nom': 'κακή', 'gen': 'κακής', 'acc': 'κακή', 'voc': 'κακή'},
                             'neut': {'nom': 'κακό', 'gen': 'κακού', 'acc': 'κακό', 'voc': 'κακό'}},
                      'pl': {'masc': {'nom': 'κακοί', 'gen': 'κακών', 'acc': 'κακούς', 'voc': 'κακοί'},
                             'fem': {'nom': 'κακές', 'gen': 'κακών', 'acc': 'κακές', 'voc': 'κακές'},
                             'neut': {'nom': 'κακά', 'gen': 'κακών', 'acc': 'κακά', 'voc': 'κακά'}}},
                     {'sg': {'fem': {'nom': 'κακιά', 'gen': 'κακιάς', 'acc': 'κακιά', 'voc': 'κακιά'}}}],
             'comp': [{
                 'sg': {
                     'masc': {
                         'nom': 'χειρότερος',
                         'gen': 'χειρότερου',
                         'acc': 'χειρότερο',
                         'voc': 'χειρότερε'},
                     'fem': {
                         'nom': 'χειρότερη',
                         'gen': 'χειρότερης',
                         'acc': 'χειρότερη',
                         'voc': 'χειρότερη'},
                     'neut': {
                         'nom': 'χειρότερο',
                         'gen': 'χειρότερου',
                         'acc': 'χειρότερο',
                         'voc': 'χειρότερο'}},
                 'pl': {
                     'masc': {
                         'nom': 'χειρότεροι',
                         'gen': 'χειρότερων',
                         'acc': 'χειρότερους',
                         'voc': 'χειρότεροι'},
                     'fem': {
                         'nom': 'χειρότερες',
                         'gen': 'χειρότερων',
                         'acc': 'χειρότερες',
                         'voc': 'χειρότερες'},
                     'neut': {
                         'nom': 'χειρότερα',
                         'gen': 'χειρότερων',
                         'acc': 'χειρότερα',
                         'voc': 'χειρότερα'}}},
                 {
                     'sg': {
                         'masc': {
                             'nom': 'ήσσων',
                             'gen': 'ήσσονα',
                             'acc': 'ήσσονα',
                             'voc': 'ήσσων'},
                         'fem': {
                             'nom': 'ήσσων',
                             'gen': 'ήσσονος',
                             'acc': 'ήσσονα',
                             'voc': 'ήσσων'},
                         'neut': {
                             'nom': 'ήσσον',
                             'gen': 'ήσσονος',
                             'acc': 'ήσσον',
                             'voc': 'ήσσον'}},
                     'pl': {
                         'masc': {
                             'nom': 'ήσσονες',
                             'gen': 'ησσόνων',
                             'acc': 'ήσσονες',
                             'voc': 'ήσσονες'},
                         'fem': {
                             'nom': 'ήσσονες',
                             'gen': 'ησσονών',
                             'acc': 'ήσσονες',
                             'voc': 'ήσσονες'},
                         'neut': {
                             'nom': 'ήσσονα',
                             'gen': 'ησσόνων',
                             'acc': 'ήσσονα',
                             'voc': 'ήσσονα'}}},
                 {
                     'sg': {
                         'masc': {
                             'nom': 'ήσσων',
                             'gen': 'ήσσονος',
                             'acc': 'ήσσονα',
                             'voc': 'ήσσων'}},
                     'pl': {
                         'masc': {
                             'nom': 'ήσσονες',
                             'gen': 'ησσόνων',
                             'acc': 'ήσσονες',
                             'voc': 'ήσσονες'}}}],
             'superl': [{'sg': {'masc': {'nom': 'χείριστος', 'gen': 'χείριστου', 'acc': 'χείριστο', 'voc': 'χείριστε'},
                                'fem': {'nom': 'χείριστη', 'gen': 'χείριστης', 'acc': 'χείριστη', 'voc': 'χείριστη'},
                                'neut': {'nom': 'χείριστο', 'gen': 'χείριστου', 'acc': 'χείριστο', 'voc': 'χείριστο'}},
                         'pl': {
                             'masc': {'nom': 'χείριστοι', 'gen': 'χείριστων', 'acc': 'χείριστους', 'voc': 'χείριστοι'},
                             'fem': {'nom': 'χείριστες', 'gen': 'χείριστων', 'acc': 'χείριστες', 'voc': 'χείριστες'},
                             'neut': {'nom': 'χείριστα', 'gen': 'χείριστων', 'acc': 'χείριστα', 'voc': 'χείριστα'}}}, {
                            'sg': {'masc': {'nom': 'ήκιστος', 'gen': 'ήκιστου', 'acc': 'ήκιστο', 'voc': 'ήκιστε'},
                                   'fem': {'nom': 'ήκιστη', 'gen': 'ήκιστης', 'acc': 'ήκιστη', 'voc': 'ήκιστη'},
                                   'neut': {'nom': 'ήκιστο', 'gen': 'ήκιστου', 'acc': 'ήκιστο', 'voc': 'ήκιστο'}},
                            'pl': {'masc': {'nom': 'ήκιστοι', 'gen': 'ήκιστων', 'acc': 'ήκιστους', 'voc': 'ήκιστοι'},
                                   'fem': {'nom': 'ήκιστες', 'gen': 'ήκιστων', 'acc': 'ήκιστες', 'voc': 'ήκιστες'},
                                   'neut': {'nom': 'ήκιστα', 'gen': 'ήκιστων', 'acc': 'ήκιστα', 'voc': 'ήκιστα'}}}],
             'adv': ['κακά', 'κακώς'], 'comp_adv': ['χειρότερα', 'ήσσον', 'ήττον'], 'superl_adv': ['κάκιστα', 'ήκιστα']}

        )
if __name__ == "__main__":

    main()